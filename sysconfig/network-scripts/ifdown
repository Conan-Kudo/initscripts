#!/bin/sh
PATH=/sbin:/usr/sbin:/bin:/usr/bin

cd /etc/sysconfig/network-scripts
. network-functions

CONFIG=$1

[ -z "$CONFIG" ] && {
    echo "usage: ifdown <device name>" >&2
    exit 1
}

[ -f "$CONFIG" ] || CONFIG=ifcfg-$CONFIG
[ -f "$CONFIG" ] || {
    echo "usage: ifdown <device name>" >&2
    exit 1
}

if [ $UID != 0 ]; then
    if [ -x /usr/sbin/usernetctl ]; then
	if /usr/sbin/usernetctl $CONFIG report ; then
	    exec /usr/sbin/usernetctl $CONFIG down
	fi
    fi
    echo "Users cannot control this device." >&2
    exit 1
fi

source_config

if [ -x /sbin/ifdown-pre-local ]; then
    /sbin/ifdown-pre-local ${DEVICE}
fi

DEVICETYPE=`echo $DEVICE | sed "s/[0-9]*$//"`
OTHERSCRIPT="/etc/sysconfig/network-scripts/ifdown-${DEVICETYPE}"

if [ -x $OTHERSCRIPT ]; then
	exec $OTHERSCRIPT $CONFIG $2
fi

. /etc/sysconfig/network

# Check to make sure the device is actually up
check_device_down && exit 0

retcode=0
if [ "$BOOTPROTO" = bootp -o "$BOOTPROTO" = dhcp ]; then
	[ -n "`pidof -x pump`" ] && {
	 	pump -r -i ${DEVICE}
		retcode=$?
	}
	[ -n "`pidof -x dhcpcd`" ] && {
		dhcpcd -k ${DEVICE}
		retcode=$?
	}	
fi


ifconfig ${DEVICE} down
[ "$retcode" = "0" ] && retcode=$?

# wait up to 5 seconds for device to actually come down...
waited=0
while ! check_device_down && [ "$waited" -lt 50 ] ; do
    usleep 10000
    waited=$(($waited+1))
done

if [ "$retcode" = 0 ] ; then
    /etc/sysconfig/network-scripts/ifdown-post $CONFIG
    # do NOT use $? because ifdown should return whether or not
    # the interface went down.
fi

exit $retcode
